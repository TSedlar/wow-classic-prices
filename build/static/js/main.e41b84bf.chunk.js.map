{"version":3,"sources":["helper/WoWUtil.js","helper/NexusHub.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","moneyToGSC","m","gold","parseInt","Math","floor","silver","copper","toString","util","require","fetch","BASE_API","ITEM_API","SERVER_API","SEARCH_SUGGEST_API","SUFFIXES","NexusHub","server","faction","this","itemName","apiURL","format","request","json","result","a","length","searchSuggestedItems","query","limit","FACTIONS","CLASSIC_ITEMS","throttle","stringComp","searchThrottle","priceThrottle","nexus","item","fetchData","uniqueName","itemData","resolvePrice","historical","market","vendor","stats","current","historicalValue","marketValue","vendorPrice","dataErr","getKey","toLowerCase","Search","props","useState","setQuery","setNexus","useContext","AppContext","setAppState","PriceContext","priceState","setPriceState","useEffect","console","log","fuzzyItems","itemKey","prices","has","itemPrice","set","name","get","abort","keys","key","delete","filter","i","includes","compareTwoStrings","sort","b","aSimilarity","slice","min","items","TextField","label","variant","onChange","event","suffix","endsWith","substring","replace","cleanItemSuffix","target","value","initialAppState","initialPriceState","Map","createContext","AppStore","children","appState","Provider","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","SearchContainer","serverList","setServerList","setServer","setFaction","getItemPrice","getItemKey","cachePrice","getServers","then","servers","slug","classes","className","FormControl","fullWidth","InputLabel","NativeSelect","e","map","src","icon","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e41b84bf.chunk.js","sourcesContent":["module.exports.moneyToGSC = (m) => {\r\n  const gold = parseInt(Math.floor(m / 1000))\r\n  const silver = parseInt(Math.floor((m % 1000) / 100))\r\n  const copper = parseInt(Math.floor((m % 1000) % 100))\r\n  return { gold, silver, copper, toString: () => `${gold}g ${silver}s ${copper}c` }\r\n}","/**\r\n * A class used to interact with NexusHub.co's API.\r\n * Primarily used for grabbing price data in accordance to\r\n * the server and faction your character is aligned with.\r\n * \r\n * @summary A class used to interact with NexusHub.co's API\r\n * @author Tyler Sedlar <tyler@sedlar.me>\r\n * \r\n * @since 9/20/2020\r\n */\r\n\r\nconst util = require('util')\r\nconst fetch = require('node-fetch')\r\n\r\nconst BASE_API = 'https://api.nexushub.co/wow-classic/v1'\r\nconst ITEM_API = `${BASE_API}/items/%s-%s/%s` // {server}-{alliance or horde}/{item}\r\nconst SERVER_API = `${BASE_API}/servers/full`\r\n\r\nconst SEARCH_API = `${BASE_API}/search?limit=%s&threshold=%s&query=%s`// limit, threshold, query\r\nconst SEARCH_SUGGEST_API = `${BASE_API}/search/suggestions?limit=%s&query=%s`// limit, query\r\n\r\nconst SUFFIXES = [\r\n  'of Spirit',\r\n  'of Intellect',\r\n  'of Strength',\r\n  'of Stamina',\r\n  'of Agility',\r\n  'of Frozen Wrath',\r\n  'of Arcane Wrath',\r\n  'of Fiery Wrath',\r\n  'of Nature\\'s Wrath',\r\n  'of Healing',\r\n  'of Shadow Wrath',\r\n  'of Fire Resistance',\r\n  'of Nature Resistance',\r\n  'of Arcane Resistance',\r\n  'of Frost Resistance',\r\n  'of Shadow Resistance',\r\n  'of Fire Protection',\r\n  'of Nature Protection',\r\n  'of Arcane Protection',\r\n  'of Frost Protection',\r\n  'of Shadow Protection',\r\n  'Of the Tiger',\r\n  'Of the Bear',\r\n  'Of the Gorilla',\r\n  'Of the Boar',\r\n  'Of the Monkey',\r\n  'Of the Falcon',\r\n  'Of the Wolf',\r\n  'Of the Eagle',\r\n  'Of the Whale',\r\n  'Of the Owl',\r\n  'of Striking',\r\n  'of Sorcery',\r\n  'of Regeneration',\r\n  'of Concentration',\r\n  'of Blocking',\r\n  'of Battle',\r\n  'of the Ancestor',\r\n  'of the Bandit',\r\n  'of the Beast',\r\n  'of the Champion',\r\n  'of the Crusade',\r\n  'of the Elder',\r\n  'of the Grove',\r\n  'of the Hunt',\r\n  'of the Hierophant',\r\n  'of the Invoker',\r\n  'of the Knight',\r\n  'of the Mind',\r\n  'of the Nightmare',\r\n  'of the Physician',\r\n  'of the Prophet',\r\n  'of the Shadow',\r\n  'of the Soldier',\r\n  'of the Sorcerer',\r\n  'of the Sun',\r\n  'of the Vision',\r\n  'of the Wild',\r\n  'of the Foreseer',\r\n  'of the Marksman',\r\n  'of the Necromancer',\r\n  'of the Squire',\r\n  'of the Thief',\r\n  'Of Defense',\r\n  'Of Power',\r\n  'Of Marksmanship',\r\n  'Of Eluding'\r\n]\r\n\r\nexport default class NexusHub {\r\n\r\n  constructor(server, faction) {\r\n    this.server = server\r\n    this.faction = faction\r\n  }\r\n\r\n  async fetchData(itemName) {\r\n    const apiURL = util.format(ITEM_API, this.server, this.faction, itemName)\r\n    const request = await fetch(apiURL)\r\n    const result = await request.json()\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nexport async function getServers() {\r\n  const request = await fetch(SERVER_API)\r\n  let result = await request.json()\r\n\r\n  if (!result.length) {\r\n    result = []\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport async function searchItems(query, limit = 10, threshold = 0.4) {\r\n  const apiURL = util.format(SEARCH_API, limit, threshold, query)\r\n  const request = await fetch(apiURL)\r\n  let result = await request.json()\r\n\r\n  if (!result.length) {\r\n    result = []\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport async function searchSuggestedItems(query, limit = 10) {\r\n  const apiURL = util.format(SEARCH_SUGGEST_API, limit, query)\r\n  const request = await fetch(apiURL)\r\n  let result = await request.json()\r\n\r\n  if (!result.length) {\r\n    result = []\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function cleanItemSuffix(itemName) {\r\n  for (let suffix of SUFFIXES) {\r\n    if (itemName.toLowerCase().endsWith(suffix.toLowerCase())) {\r\n      itemName = itemName.substring(0, itemName.length - suffix.length)\r\n      itemName = itemName.replace(/\\s\\s+/g, ' ')\r\n    }\r\n  }\r\n  return itemName\r\n}\r\n\r\nexport const FACTIONS = ['Alliance', 'Horde']\r\nexport const SEARCH_RATE_LIMIT_PER_SEC = 6\r\nexport const PRICE_RATE_LIMIT_PER_SEC = 3","/**\r\n * Searches NexusHub for item details\r\n * \r\n * @summary Searches NexusHub for item details\r\n * @author Tyler Sedlar <tyler@sedlar.me>\r\n * \r\n * @since 9/20/2020\r\n */\r\n\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport NexusHub, {\r\n    SEARCH_RATE_LIMIT_PER_SEC,\r\n    PRICE_RATE_LIMIT_PER_SEC,\r\n    searchSuggestedItems,\r\n    cleanItemSuffix\r\n} from '../helper/NexusHub'\r\n\r\nimport { AppContext, PriceContext } from '../App'\r\n\r\nconst CLASSIC_ITEMS = require('wow-classic-items/data/json/data.json')\r\nconst throttle = require('p-throttle')\r\nconst stringComp = require('string-similarity')\r\n\r\nconst searchThrottle = throttle(async (query) => {\r\n    return await searchSuggestedItems(query, 10, 0.4)\r\n}, SEARCH_RATE_LIMIT_PER_SEC, 1000)\r\n\r\nconst priceThrottle = throttle(async (nexus, item) => {\r\n    const itemData = await nexus.fetchData(item.uniqueName)\r\n    return resolvePrice(itemData)\r\n}, PRICE_RATE_LIMIT_PER_SEC, 1000)\r\n\r\nfunction resolvePrice(itemData) {\r\n    let historical = -1\r\n    let market = -1\r\n    let vendor = -1\r\n\r\n    try {\r\n        if (itemData.stats && itemData.stats.current) {\r\n            if (itemData.stats.current.historicalValue) {\r\n                historical = itemData.stats.current.historicalValue\r\n            }\r\n\r\n            if (itemData.stats.current.marketValue) {\r\n                market = itemData.stats.current.marketValue\r\n            }\r\n        }\r\n        if (itemData.vendorPrice) {\r\n            vendor = itemData.vendorPrice\r\n        }\r\n    } catch (dataErr) {\r\n    }\r\n\r\n    if (historical !== -1 && historical !== '-1') {\r\n        return historical\r\n    } else if (market !== -1 && market !== '-1') {\r\n        return market\r\n    } else if (vendor !== -1 && vendor !== '-1') {\r\n        return vendor\r\n    }\r\n\r\n    return 'N/A'\r\n}\r\n\r\nfunction getKey(nexus, item) {\r\n    return nexus.server.toLowerCase() + '-' + nexus.faction.toLowerCase() + '-' + item.uniqueName\r\n}\r\n\r\nfunction Search(props) {\r\n    const [query, setQuery] = useState(null)\r\n    const [nexus, setNexus] = useState(null)\r\n\r\n    const [appState, setAppState] = useContext(AppContext)\r\n    const [priceState, setPriceState] = useContext(PriceContext)\r\n\r\n    useEffect(() => {\r\n        if (!nexus && props.server && props.faction) {\r\n            console.log('Server: ' + props.server)\r\n            console.log('Faction: ' + props.faction)\r\n            setNexus(new NexusHub(props.server, props.faction))\r\n        }\r\n\r\n        if (nexus && props.server && props.faction && query && query.length >= 3) {\r\n            searchThrottle.abort()\r\n            priceThrottle.abort()\r\n\r\n            // remove items with an invalid price due to aborting\r\n            for (let key of priceState.prices.keys()) {\r\n                if (priceState.prices.get(key) === -1) {\r\n                    priceState.prices.delete(key)\r\n                }\r\n            }\r\n\r\n            setPriceState({ prices: priceState.prices })\r\n\r\n            // get only most similar matches\r\n            let fuzzyItems = CLASSIC_ITEMS.filter(i => i.name.toLowerCase().includes(query.toLowerCase()) ||\r\n                stringComp.compareTwoStrings(i.name.toLowerCase(), query.toLowerCase()) >= 0.65)\r\n\r\n            // sort by similarity\r\n            fuzzyItems.sort((a, b) => {\r\n                const aSimilarity = stringComp.compareTwoStrings(a.name.toLowerCase(), query.toLowerCase())\r\n                const bSimilarity = stringComp.compareTwoStrings(b.name.toLowerCase(), query.toLowerCase())\r\n                return bSimilarity - aSimilarity\r\n            })\r\n\r\n            // top 10 ranked matches\r\n            fuzzyItems = fuzzyItems.slice(0, Math.min(fuzzyItems.length, 10))\r\n\r\n            setAppState({ items: fuzzyItems })\r\n\r\n            async function fetchData() {\r\n                for (let item of fuzzyItems) {\r\n                    const itemKey = getKey(nexus, item)\r\n                    if (!priceState.prices.has(itemKey)) {\r\n                        let itemPrice = -1\r\n                        try {\r\n                            itemPrice = await priceThrottle(nexus, item)\r\n                        } catch (_) {\r\n                            console.log('Aborted priceThrottle')\r\n                        } // catch early abort\r\n\r\n                        if (itemPrice !== -1) {\r\n                            priceState.prices.set(itemKey, itemPrice)\r\n                            console.log(`${item.name} (${itemKey}) = ${itemPrice}`)\r\n                        }\r\n                    } else {\r\n                        console.log(`price cached for ${item.name} (${priceState.prices.get(itemKey)})`)\r\n                    }\r\n\r\n                    setPriceState({ prices: priceState.prices })\r\n                }\r\n\r\n                setPriceState({ prices: priceState.prices })\r\n            }\r\n\r\n            fetchData()\r\n        } else {\r\n            setAppState({ items: [] })\r\n            setPriceState({ prices: priceState.prices })\r\n        }\r\n    }, [query])\r\n\r\n    return (\r\n        <TextField label=\"Query\" variant=\"outlined\" onChange={setItemQuery}></TextField>\r\n    )\r\n\r\n    function setItemQuery(event) {\r\n        setQuery(cleanItemSuffix(event.target.value))\r\n    }\r\n}\r\n\r\nexport default Search","import React, { createContext, useEffect, useState, useContext } from 'react'\r\nimport { FormControl, InputLabel, NativeSelect } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Search from './components/Search'\r\nimport NexusHub, { FACTIONS, getServers } from './helper/NexusHub'\r\nimport { moneyToGSC } from './helper/WoWUtil'\r\n\r\nimport './App.css'\r\n\r\nconst util = require('util')\r\n\r\nconst ICON_URL_FORMAT = `https://render-classic-us.worldofwarcraft.com/icons/56/%s.jpg`\r\n\r\nconst initialAppState = {\r\n  items: []\r\n}\r\n\r\nconst initialPriceState = {\r\n  prices: new Map()\r\n}\r\n\r\nexport const AppContext = createContext(initialAppState)\r\nexport const PriceContext = createContext(initialPriceState)\r\n\r\nconst AppStore = ({ children }) => {\r\n  const [appState, setAppState] = useState(initialAppState)\r\n  const [priceState, setPriceState] = useState(initialPriceState)\r\n  return (\r\n    <AppContext.Provider value={[appState, setAppState]}>\r\n      <PriceContext.Provider value={[priceState, setPriceState]}>\r\n        {children}\r\n      </PriceContext.Provider>\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  }\r\n}))\r\n\r\nfunction SearchContainer() {\r\n  const [serverList, setServerList] = useState([])\r\n  const [server, setServer] = useState(null)\r\n  const [faction, setFaction] = useState(FACTIONS[0])\r\n\r\n  const [appState] = useContext(AppContext)\r\n  const [priceState] = useContext(PriceContext)\r\n\r\n  // TODO: check cache setServer/setFaction\r\n\r\n  useEffect(() => {\r\n    getServers().then(servers => {\r\n      setServerList(servers)\r\n      setServer(servers[0].slug)\r\n    })\r\n  }, [])\r\n\r\n  function getItemKey(item) {\r\n    if (!server || !faction) {\r\n      return null\r\n    } \r\n    return server.toLowerCase() + '-' + faction.toLowerCase() + '-' + item.uniqueName\r\n  }\r\n\r\n  function getItemPrice(item) {\r\n    let itemPrice = '?'\r\n\r\n    const itemKey = getItemKey(item)\r\n    if (priceState.prices.has(itemKey)) {\r\n      let cachePrice = priceState.prices.get(itemKey)\r\n      if (cachePrice !== -1) {\r\n        itemPrice = cachePrice\r\n      }\r\n    }\r\n\r\n    if (itemPrice !== -1 && itemPrice !== '?' && itemPrice !== 'N/A') {\r\n      itemPrice = moneyToGSC(parseInt(itemPrice)).toString()\r\n    }\r\n    return itemPrice\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        {server && <FormControl fullWidth className={classes.margin}>\r\n          <InputLabel>Server</InputLabel>\r\n          <NativeSelect\r\n            value={server.slug}\r\n            onChange={(e) => setServer(e.target.value)}>\r\n            {serverList.map(server => (\r\n              <option key={server.slug} value={server.slug}>{server.name}</option>\r\n            ))}\r\n          </NativeSelect>\r\n        </FormControl>}\r\n\r\n        <FormControl fullWidth className={classes.margin}>\r\n          <InputLabel>Faction</InputLabel>\r\n          <NativeSelect onChange={(e) => setFaction(e.target.value)}>\r\n            {FACTIONS.map(faction => <option key={faction} value={faction}>{faction}</option>)}\r\n          </NativeSelect>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.margin}>\r\n          <Search server={server} faction={faction} />\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"item-table\">\r\n        {appState.items.map(item => (\r\n          <div className=\"search-item row\">\r\n            <div className=\"column left\">\r\n              <img src={util.format(ICON_URL_FORMAT, item.icon)}></img>\r\n            </div>\r\n\r\n            <div className=\"column middle\">\r\n              <span>{item.name}</span>\r\n            </div>\r\n\r\n            <div className=\"column right\">\r\n              <span>{getItemPrice(item)}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <AppStore>\r\n      <div className=\"App\">\r\n        <SearchContainer />\r\n      </div>\r\n    </AppStore>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}